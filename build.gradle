buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net/' }
		mavenCentral()
		gradlePluginPortal()
	}

	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+'
		classpath group: 'com.github.johnrengelman.shadow', name: 'com.github.johnrengelman.shadow.gradle.plugin', version: '7.1.2'
//		classpath group: 'gradle.plugin.net.minecrell', name: 'licenser', version: '0.3'
	}
}

apply plugin: 'java'
//apply plugin: 'net.minecrell.licenser'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
compileJava {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
	maven {
		name = 'BlameJared'
		url = 'https://maven.blamejared.com/'
	}
	maven {
		name = 'ElytraDev'
		url = 'https://oldrepo.y2k.diy/'
	}
	maven {
		name = 'CurseForge'
		url = 'https://cursemaven.com/'
		content {
			includeGroup 'curse.maven'
		}
	}
	flatDir {
		dirs 'libs'
	}
}

def concrete_modules=['common','inventory','network','recipe','reflect'];

configurations {
	shadow
}

dependencies {
	minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

	compileOnly fg.deobf('x:ProbeDataProviderAPI:MC1.12_ver1.1.1')

	compileOnly fg.deobf("curse.maven:baubles-227083:2518667")
	compileOnly fg.deobf("mezz.jei:jei_${project.minecraft_version}:${project.jei_version}:api")
	runtimeOnly fg.deobf("mezz.jei:jei_${project.minecraft_version}:${project.jei_version}")

	for (String module : concrete_modules) {
		shadow compileOnly('com.elytradev.concrete:concrete-' + module + ':' + project.concrete_version);
	}

	shadow compileOnly("blue.endless:jankson:${project.jankson_version}");
}

minecraft {
	mappings channel: "stable", version: project.mcp_mappings

	runs {
		"client" {
			workingDirectory file("./run")
			mods { "${project.name}" { source sourceSets.main } }
		}

		"server" {
			workingDirectory file("./run/server")
			mods { "${project.name}" { source sourceSets.main } }
		}
	}
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property 'version', project.version
	inputs.property 'mcversion', project.minecraft_version

	// replace stuff in mcmod.info, nothing else
	filesMatching('mcmod.info') {
		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft_version
	}

	exclude '*.xcf' // always exclude gimp source files.
}

jar {
	archiveClassifier = 'slim'
}

shadowJar {
	archiveClassifier = ''
	configurations = [project.configurations.shadow]
	finalizedBy 'reobfShadowJar'

	relocate 'blue.endless.jankson', maven_group + '.thermionics.repackage.com.elytradev.concrete'
	relocate 'com.elytradev.concrete', maven_group + '.thermionics.repackage.com.elytradev.concrete'

	exclude 'META-INF/**'
}

tasks.assemble.dependsOn shadowJar

reobf { shadowJar {} }

//license {
//	sourceSets = [project.sourceSets.main]
//
//	include '**/*.java';
//
//	exclude '**/mcmod.info';
//	exclude '**/*.json';
//	exclude '**/*.png';
//	exclude '**/*.mcmeta';
//	exclude '**/*.ogg';
//	exclude '**/*.lang';
//	exclude '/src/main/resources/**';
//	//Should be covered by the above
//	exclude '**/*.mtl';
//	exclude '**/*.obj';
//	exclude '/doc/**';
//	exclude '/com/elytradev/concrete/**';
//
//	//Copyrights other than the original:
//	exclude '**/JEIDrawableImage.java'
//}
